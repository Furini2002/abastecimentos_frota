/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.abastecimentofrota.ui;

import br.com.abastecimentofrota.model.Abastecimento;
import br.com.abastecimentofrota.model.NotaFiscal;
import br.com.abastecimentofrota.model.NotaFiscalCupom;
import br.com.abastecimentofrota.service.AbastecimentoService;
import br.com.abastecimentofrota.service.NotaFiscalCupomService;
import br.com.abastecimentofrota.service.NotaFiscalService;
import br.com.abastecimentofrota.util.TipoCombustivel;
import br.com.abastecimentofrota.util.TipoCombustivelComboBoxModel;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import javax.swing.JOptionPane;

/**
 *
 * @author Administração01
 */
public class TelaCadastroNotaFiscal extends javax.swing.JFrame {

    /**
     * Creates new form TelaCadastroNotaFiscal
     */
    private final NotaFiscalService notaService;
    private final NotaFiscalCupomService notaCupomService;
    private final AbastecimentoService abastecimentoService;

    public TelaCadastroNotaFiscal(NotaFiscalService notaService, NotaFiscalCupomService notaCupomService, AbastecimentoService abastecimentoService) {
        this.notaService = notaService;
        this.notaCupomService = notaCupomService;
        this.abastecimentoService = abastecimentoService;

        initComponents();

        //configurando os combobox
        TipoCombustivelComboBoxModel comboTipoCombustivel = new TipoCombustivelComboBoxModel();
        this.comboCombustivel.setModel(comboTipoCombustivel);

        //configurando etxt para quebrar linhas
        areaCupons.setLineWrap(true);             
        areaCupons.setWrapStyleWord(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        textNumero = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        textData = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaCupons = new javax.swing.JTextArea();
        buttonCadastrar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        comboCombustivel = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Notas Fiscais");

        jLabel1.setText("Numero*");

        jLabel2.setText("Data*");

        jLabel3.setText("Cupons*");

        areaCupons.setColumns(20);
        areaCupons.setRows(5);
        jScrollPane1.setViewportView(areaCupons);

        buttonCadastrar.setBackground(new java.awt.Color(76, 175, 80));
        buttonCadastrar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buttonCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        buttonCadastrar.setText("Cadastrar");
        buttonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCadastrarActionPerformed(evt);
            }
        });

        jLabel4.setText("Tipo de Combustível* ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(textNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(textData, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1))
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboCombustivel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonCadastrar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(textData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboCombustivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCadastrar)
                .addGap(10, 10, 10))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCadastrarActionPerformed
        String numeroNota = textNumero.getText().trim();
        String dataTexto = textData.getText().trim();
        String cuponsTexto = areaCupons.getText().trim();
        TipoCombustivel tipoCombustivel = (TipoCombustivel) comboCombustivel.getSelectedItem();

        if (numeroNota.isEmpty() || dataTexto.isEmpty() || cuponsTexto.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos obrigatórios.");
            return;
        }

        try {
            LocalDate data = LocalDate.parse(dataTexto, DateTimeFormatter.ofPattern("dd/MM/yyyy"));

            // Cria e salva a nota fiscal
            NotaFiscal nota = new NotaFiscal();
            nota.setNumero(numeroNota);
            nota.setData(data);
            nota.setTipoCombustivel(tipoCombustivel);
            nota = notaService.salvar(nota); // Salva e recupera com ID

            // Separa os cupons por vírgula, tira espaços e duplicatas
            List<String> listaCupons = Arrays.stream(cuponsTexto.split(","))
                    .map(String::trim)
                    .filter(s -> !s.isEmpty())
                    .distinct()
                    .toList();

            for (String numeroCupom : listaCupons) {
                // Cria o vínculo entre cupom e nota
                NotaFiscalCupom nfc = new NotaFiscalCupom();
                nfc.setNotaFiscal(nota);
                nfc.setNumeroCupom(numeroCupom);

                // Tenta encontrar o abastecimento correspondente
                Optional<Abastecimento> abastecimentoOpt = abastecimentoService.findByCupomFiscal(numeroCupom);
                if (abastecimentoOpt.isPresent()) {
                    Abastecimento ab = abastecimentoOpt.get();
                    ab.setNotaFiscal(nota);
                    abastecimentoService.salvar(ab); // atualiza com a nota
                    nfc.setAbastecimentoCadastrado(ab);
                }

                // Salva o cupom vinculado à nota (mesmo se abastecimento não for encontrado)
                notaCupomService.salvar(nfc);
            }

            JOptionPane.showMessageDialog(this, "Nota Fiscal e cupons salvos com sucesso!");
            dispose();

        } catch (DateTimeParseException ex) {
            JOptionPane.showMessageDialog(this, "Data inválida. Use o formato dd/MM/yyyy.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao salvar: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_buttonCadastrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaCupons;
    private javax.swing.JButton buttonCadastrar;
    private javax.swing.JComboBox<TipoCombustivel> comboCombustivel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField textData;
    private javax.swing.JTextField textNumero;
    // End of variables declaration//GEN-END:variables
}
